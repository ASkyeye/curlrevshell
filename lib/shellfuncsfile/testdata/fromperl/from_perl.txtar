These are test cases for FromPerl.
Each case has two files *.have and *.want
The environment variable name is always SFF_1720354778930267614
-- simple.have --
print "Kittens\n";
-- simple.want --
simple() {(
(exit $((0 != $#))) || set -- -e "" -- "$@";
PERL5OPT=-d PERL5DB='BEGIN{eval(unpack(u,q{`
3<s)I;G0@(DMI=s1E;G-<;B(["@``
}=~y/sb/\47\134/r));die"Error: $@"if(""ne$@);exit}' perl "$@"; )}
-- header.have --
#!/usr/bin/env perl
#
# header.pl
# A test case

print "Kittens\n";

sleep 1;

die "We tried";

    

-- header.want --
# header.pl
# A test case
header() {(
(exit $((0 != $#))) || set -- -e "" -- "$@";
PERL5OPT=-d PERL5DB='BEGIN{eval(unpack(u,q{`
M"@H*"@IP<FEN="`B2VET=&5N<UQN(CL*"G-L965P(#$["@ID:64@(E=E(s1R
&:65D(CL*
}=~y/sb/\47\134/r));die"Error: $@"if(""ne$@);exit}' perl "$@"; )}
-- empty.have --
-- empty.want --
empty() {}
-- args.have --
print "\$#ARGV: $#ARGV\n"; for my $i (0..$#ARGV) {print "$i\t$ARGV[$i]\n"}
-- args.want --
args() {(
(exit $((0 != $#))) || set -- -e "" -- "$@";
PERL5OPT=-d PERL5DB='BEGIN{eval(unpack(u,q{`
M<s)I;G0@(EPD(T%21U8Z("0C05)s5EQN(CL@9F]R(&UY("1I("@P+BXD(T%2
>1U8I(sMP<FEN="`B)&E<="1!4D=66R1I75QN(GT*
}=~y/sb/\47\134/r));die"Error: $@"if(""ne$@);exit}' perl "$@"; )}
-- backslash.have --
echo "x_!Pp"
-- backslash.want --
backslash() {(
(exit $((0 != $#))) || set -- -e "" -- "$@";
PERL5OPT=-d PERL5DB='BEGIN{eval(unpack(u,q{`
-96-H;R`B>%bA4s`B"@``
}=~y/sb/\47\134/r));die"Error: $@"if(""ne$@);exit}' perl "$@"; )}
